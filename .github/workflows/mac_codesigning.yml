name: MacOS Codesigning

on:
  workflow_call:
    inputs:
      version:
        required: true
        type: string


jobs:
  codesign:
    name: MacOS Codesigning
    runs-on: inputs.version
    steps:
      - name: Create macOS keychain
        if: runner.os == 'macOS'
        env: 
          APPLE_DEV_EMAIL: ${{secrets.APPLE_DEV_EMAIL}}
          APP_SPEC_PASS: ${{secrets.APP_SPEC_PASS}}
          APPLE_APP_CERTIFICATE: ${{secrets.DEV_APP_CERT}}
          APPLE_APP_CERT_PASSWORD: ${{secrets.DEV_APP_CERT_PASS}}
          APPLE_INST_CERTIFICATE: ${{secrets.DEV_INST_CERT}}
          APPLE_INST_CERT_PASSWORD: ${{secrets.DEV_INST_CERT_PASS}}
          APPLE_KEYCHAIN_PASS: ${{secrets.APPLE_KEY_PASS}}
        run: |
          echo "$APPLE_APP_CERTIFICATE" | base64 --decode > app_certificate.p12
          echo "$APPLE_INST_CERTIFICATE" | base64 --decode > inst_certificate.p12
          security create-keychain -p $APPLE_KEYCHAIN_PASS build.keychain
          security default-keychain -s build.keychain
          security set-keychain-settings -lut 21600 build.keychain
          security unlock-keychain -p $APPLE_KEYCHAIN_PASS build.keychain
          security import app_certificate.p12 -k build.keychain -P $APPLE_APP_CERT_PASSWORD -T /usr/bin/codesign
          security import inst_certificate.p12 -k build.keychain -P $APPLE_INST_CERT_PASSWORD -T /usr/bin/productsign
          security set-key-partition-list -S apple-tool:,apple:,codesign: -s -k $APPLE_KEYCHAIN_PASS build.keychain

      - name: Sign mac executable
        if: runner.os == 'macOS'
        env:
          APP_ID: ${{secrets.APP_ID}}
        run: |
          /usr/bin/codesign --force -s "$APP_ID" --timestamp -i "org.mangotango.cli" --options runtime --entitlements "mango.entitlements" "dist/mangotango_${{inputs.version}}"
          codesign -vvv dist/mangotango_${{inputs.version}}

      - name: Create and sign mac package
        if: runner.os == 'macOS'
        env:
          INST_ID: ${{secrets.INST_ID}}
          APPLE_KEYCHAIN_PASS: ${{secrets.APPLE_KEY_PASS}}
        run: |
          mkdir -p /tmp/mangotango/
          ditto dist/mangotango_${{inputs.version}} /tmp/mangotango/mangotango
          chmod +x /tmp/mangotango/mangotango
          security unlock-keychain -p $APPLE_KEYCHAIN_PASS build.keychain
          security set-key-partition-list -S apple-tool:,apple:,codesign: -s -k "$APPLE_KEYCHAIN_PASS" build.keychain
          pkgbuild --identifier "org.mangotango.cli" --timestamp --root /tmp/mangotango --install-location /Applications "dist/mangotango_${{inputs.version}}.pkg"
          productsign --timestamp --sign "$INST_ID" dist/mangotango_${{inputs.version}}.pkg dist/mangotango_${{inputs.version}}_signed.pkg
        
      - name: Notarize Mac package
        if: runner.os == 'macOS'
        env:
          APPLE_DEV_EMAIL: ${{secrets.APPLE_DEV_EMAIL}}
          APPLE_TEAM_ID: ${{secrets.TEAM_ID}}
          APP_SPEC_PASS: ${{secrets.APP_SPEC_PASS}}
        run: xcrun notarytool submit dist/mangotango_${{inputs.version}}_signed.pkg --apple-id $APPLE_DEV_EMAIL --team-id $APPLE_TEAM_ID --password $APP_SPEC_PASS --wait > notarization_output.txt
        
      - name: Staple the notarization ticket
        if: runner.os == 'macOS'
        run: |
          xcrun stapler staple dist/mangotango_${{inputs.version}}_signed.pkg

      - name: Clean up macOS Artifacts
        if: runner.os == 'macOS'
        run: |
          rm -rf /tmp/mangotango
          rm -rf dist/mangotango_${{inputs.version}}
          rm -rf dist/mangotango_${{inputs.version}}.pkg
          mv dist/mangotango_${{inputs.version}}_signed.pkg dist/mangotango_${{inputs.version}}.pkg

      